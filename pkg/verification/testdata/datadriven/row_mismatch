#
# Throw in every type into a table and ensure we can compare all of them.
#

exec all
CREATE TABLE test_table (
    id INT4 PRIMARY KEY,
    bool_test BOOL DEFAULT true,
    char_test "char" DEFAULT 'abc',
    bpchar_test CHAR DEFAULT 'a',
    varchar_test VARCHAR DEFAULT 'abcd',
    oid_test OID DEFAULT 81,
    float4_test FLOAT4 DEFAULT 1.25,
    float8_test FLOAT8 DEFAULT 1.5,
    int2_test INT2 DEFAULT -1,
    int4_test INT4 DEFAULT 123,
    int8_test INT8 DEFAULT 666,
    jsonb_test JSONB DEFAULT '[1,2,3]',
    uuid UUID DEFAULT '35750bee-6d1f-43f0-a36c-d660474bfd2d',
    ts_test TIMESTAMP DEFAULT '2020-03-21 01:02:03.123456',
    tstz_test TIMESTAMPTZ DEFAULT '2020-03-21 01:02:03.123456',
    time_test TIME DEFAULT '01:02:45.123456',
    timetz_test TIME DEFAULT '01:02:03.234999+03',
    date_test DATE DEFAULT '2020-09-13',
    bytes_test BYTEA DEFAULT 'deadbeef',
    numeric_test NUMERIC DEFAULT '123.549875545'
);
INSERT INTO test_table(id) VALUES (1)
----
[conn 0] INSERT 0 1
[conn 1] INSERT 0 1

verify
----
[STATUS] finished row verification on public.test_table: truth rows seen: 1, success: 1, missing: 0, mismatch: 0, extraneous: 0

exec all
DROP TABLE test_table
----
[conn 0] DROP TABLE
[conn 1] DROP TABLE

#
# Check we report mismatches.
#

exec all
CREATE TABLE common_table (
    id INT8 PRIMARY KEY,
    str TEXT
)
----
[conn 0] CREATE TABLE
[conn 1] CREATE TABLE

exec source_of_truth
INSERT INTO common_table VALUES
    (100, 'same value'),
    (125, 'i am missing'),
    (150, 'different value'),
    (200, 'also same value'),
    (250, 'missing on lie')
----
[conn 0] INSERT 0 5

exec non_source_of_truth
INSERT INTO common_table VALUES
    (50, 'extraneous row'),
    (100, 'same value'),
    (150, 'bad value'),
    (200, 'also same value'),
    (300, 'missing on truth')
----
[conn 1] INSERT 0 5

verify
----
[ROW MISMATCH] table public.common_table on lie has an extraneous row with PK (id=50)
[ROW MISMATCH] table public.common_table on lie is missing a row with PK (id=125)
[ROW MISMATCH] table public.common_table on lie has a mismatching row on (id=150): column str: 'bad value' vs 'different value'
[ROW MISMATCH] table public.common_table on lie is missing a row with PK (id=250)
[ROW MISMATCH] table public.common_table on lie has an extraneous row with PK (id=300)
[STATUS] finished row verification on public.common_table: truth rows seen: 5, success: 2, missing: 2, mismatch: 1, extraneous: 2

# Test two tables, but mismatching columns.
exec source_of_truth
CREATE TABLE table_misaligned_columns (
    id INT8 PRIMARY KEY,
    a INT8,
    not_common_a INT
);
INSERT INTO table_misaligned_columns VALUES
    (1, 2, 1),
    (2, 3, 2)
----
[conn 0] INSERT 0 2

exec non_source_of_truth
CREATE TABLE table_misaligned_columns (
    id INT8 PRIMARY KEY,
    a INT8,
    not_common_b INT
);
INSERT INTO table_misaligned_columns VALUES
    (1, 2, 1),
    (2, 4, 2)
----
[conn 1] INSERT 0 2

verify
----
[TABLE MISMATCH] table public.table_misaligned_columns on lie has an issue: extraneous column not_common_b found
[TABLE MISMATCH] table public.table_misaligned_columns on lie has an issue: missing column not_common_a
[ROW MISMATCH] table public.common_table on lie has an extraneous row with PK (id=50)
[ROW MISMATCH] table public.common_table on lie is missing a row with PK (id=125)
[ROW MISMATCH] table public.common_table on lie has a mismatching row on (id=150): column str: 'bad value' vs 'different value'
[ROW MISMATCH] table public.common_table on lie is missing a row with PK (id=250)
[ROW MISMATCH] table public.common_table on lie has an extraneous row with PK (id=300)
[STATUS] finished row verification on public.common_table: truth rows seen: 5, success: 2, missing: 2, mismatch: 1, extraneous: 2
[ROW MISMATCH] table public.table_misaligned_columns on lie has a mismatching row on (id=2): column a: 4 vs 3
[STATUS] finished row verification on public.table_misaligned_columns: truth rows seen: 2, success: 1, missing: 0, mismatch: 1, extraneous: 0

exec all
DROP TABLE table_misaligned_columns
----
[conn 0] DROP TABLE
[conn 1] DROP TABLE
